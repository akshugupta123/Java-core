package com.learning.core.day2session1afternoon;

class NotEligibleException extends Exception {
    public NotEligibleException(String message) {
        super(message);
    }
}

class CricketRating {
    private String playerName;
    private float critic1;
    private float critic2;
    private float critic3;
    private float avgRating;
    private String coins;

    public CricketRating(String playerName, float critic1, float critic2) {
        this.playerName = playerName;
        this.critic1 = critic1;
        this.critic2 = critic2;
        this.avgRating = (critic1 + critic2) / 2;
        this.coins = calculateCoins();
    }

    public CricketRating(String playerName, float critic1, float critic2, float critic3) {
        this.playerName = playerName;
        this.critic1 = critic1;
        this.critic2 = critic2;
        this.critic3 = critic3;
        this.avgRating = (critic1 + critic2 + critic3) / 3;
        this.coins = calculateCoins();
    }

    // New constructor to accept two critics
    public CricketRating(String playerName, float critic1) {
        this.playerName = playerName;
        this.critic1 = critic1;
        this.avgRating = critic1;
        this.coins = calculateCoins();
    }

    private String calculateCoins() {
        if (avgRating >= 7) {
            return "Gold";
        } else if (avgRating >= 5) {
            return "Silver";
        } else if (avgRating >= 2) {
            return "Copper";
        } else {
            return "NotEligible";
        }
    }

    public void display() {
        System.out.println(playerName + " " + String.format("%.2f", avgRating) + " " + coins);
    }
}

public class D02P062 {
    public static void main(String[] args) {
        try {
            CricketRating player1 = new CricketRating("John", 9.3f, 9.67f, 8.7f);
            player1.display();
        } catch (NotEligibleException e) {
            System.out.println("Output 1: " + e.getMessage());
        }

        try {
            CricketRating player2 = new CricketRating("Henry", 1.5f); // Using the new constructor
            player2.display();
        } catch (NotEligibleException e) {
            System.out.println("Output 2: " + e.getMessage());
        }
    }
}
